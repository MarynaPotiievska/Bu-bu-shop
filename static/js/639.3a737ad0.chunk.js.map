{"version":3,"file":"static/js/639.3a737ad0.chunk.js","mappings":"0JACA,EAAqB,wBAArB,EAAoD,0BAApD,EAA0F,+BAA1F,EAA+H,yBAA/H,EAAmK,8BAAnK,EAA6M,+BAA7M,EAAmP,0BAAnP,EAA4R,kCAA5R,EAA8U,mCAA9U,EAAuY,yC,UC4DvY,EAxDoB,SAAHA,GAA2B,IAADC,EAAAC,EAApBC,EAAOH,EAAPG,QAASC,EAAIJ,EAAJI,KACxBC,EAAoBC,KAAKC,KAC7BJ,EAAQK,MAASL,EAAQK,MAAQL,EAAQM,SAAY,KAGjDC,EACJP,EAAQM,SAAW,EAAIE,EAAkBA,EACrCC,EACJT,EAAQM,SAAW,EAAIE,EAAgCA,EAEnDE,EACJV,EAAQM,SAAW,EAAIE,EAA0BA,EAEnD,OACEG,EAAAA,EAAAA,KAAA,MAAIC,UAAWJ,EAAUK,UACvBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAIf,EAAMW,UAAWJ,EAAYK,SAAA,EACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAWJ,EAAiBK,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,UACEM,MAAM,qBACNC,OAAM,GAAAC,OAAKnB,EAAQoB,UAAUC,QAAQ,GAAE,SAAAF,OAAQnB,EAAQoB,UAAUC,QAAQ,GAAE,OAC3EC,KAAK,eAEPX,EAAAA,EAAAA,KAAA,UACEM,MAAM,qBACNC,OAAM,GAAAC,OAAsB,QAAtBrB,EAAKE,EAAQoB,iBAAS,IAAAtB,OAAA,EAAjBA,EAAmByB,IAAI,GAAE,SAAAJ,OAAyB,QAAzBpB,EAAQC,EAAQoB,iBAAS,IAAArB,OAAA,EAAjBA,EAAmBwB,IAAI,GAAE,OACrED,KAAK,eAEPX,EAAAA,EAAAA,KAAA,OACEa,IAAKxB,EAAQoB,UAAUG,IAAI,GAC3BE,IAAKzB,EAAQ0B,KACbd,UAAWJ,QAGfM,EAAAA,EAAAA,MAAA,QAAMF,UAAWL,EAAgBM,SAAA,CAAC,IAAEb,EAAQM,SAAS,WAEvDQ,EAAAA,EAAAA,MAAA,OAAKF,UAAWJ,EAAiBK,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAIC,UAAWJ,EAAYK,SAAEb,EAAQ0B,QACrCZ,EAAAA,EAAAA,MAAA,KAAGF,UAAWF,EAAYG,SAAA,CAAEb,EAAQK,MAAM,0BAC1CS,EAAAA,EAAAA,MAAA,QAAMF,UAAWH,EAAgBI,SAAA,CAAEX,EAAkB,gCAK/D,C,wDChDO,IAkBIyB,EAAS,WAAH,IAAIC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAC5BG,OAAOC,gBAAgB,IAAIC,WAAWN,IAAOO,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGV,GAAG,GAAG,C","sources":["webpack://bu-bu-shop/./src/components/ProductCard/ProductCard.module.css?8d00","components/ProductCard/ProductCard.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"li\":\"ProductCard_li__M48An\",\"link\":\"ProductCard_link__a3X2r\",\"container\":\"ProductCard_container__LMnrc\",\"img\":\"ProductCard_img__uTkUk\",\"discount\":\"ProductCard_discount__MDMzr\",\"unvisible\":\"ProductCard_unvisible__Yyr1D\",\"name\":\"ProductCard_name__bt83H\",\"simple-price\":\"ProductCard_simple-price__n2Jei\",\"crossed-price\":\"ProductCard_crossed-price__K06FA\",\"price-with-discount\":\"ProductCard_price-with-discount__d8gaT\"};","import PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport styles from \"./ProductCard.module.css\";\r\n\r\nconst ProductCard = ({ product, path }) => {\r\n  const priceWithDiscount = Math.ceil(\r\n    product.price - (product.price * product.discount) / 100\r\n  );\r\n\r\n  const isDiscountLable =\r\n    product.discount > 0 ? styles.discount : styles.unvisible;\r\n  const isDiscountPrice =\r\n    product.discount > 0 ? styles[\"price-with-discount\"] : styles.unvisible;\r\n\r\n  const simplePrice =\r\n    product.discount > 0 ? styles[\"crossed-price\"] : styles[\"simple-price\"];\r\n\r\n  return (\r\n    <li className={styles.li}>\r\n      <Link to={path} className={styles.link}>\r\n        <div className={styles.container}>\r\n          <picture>\r\n            <source\r\n              media=\"(min-width: 768px)\"\r\n              srcSet={`${product.mainImage.deskTab[0]} 1x, ${product.mainImage.deskTab[1]} 2x`}\r\n              type=\"image/png\"\r\n            />\r\n            <source\r\n              media=\"(max-width: 767px)\"\r\n              srcSet={`${product.mainImage?.mob[0]} 1x, ${product.mainImage?.mob[1]} 2x`}\r\n              type=\"image/png\"\r\n            />\r\n            <img\r\n              src={product.mainImage.mob[0]}\r\n              alt={product.name}\r\n              className={styles.img}\r\n            />\r\n          </picture>\r\n          <span className={isDiscountLable}>-{product.discount}%</span>\r\n        </div>\r\n        <div className={styles.container}>\r\n          <h3 className={styles.name}>{product.name}</h3>\r\n          <p className={simplePrice}>{product.price} грн</p>\r\n          <span className={isDiscountPrice}>{priceWithDiscount} грн</span>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  product: PropTypes.shape({\r\n    mainImgUrl: PropTypes.string,\r\n    discount: PropTypes.number,\r\n    name: PropTypes.string,\r\n    price: PropTypes.number,\r\n  }).isRequired,\r\n  path: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ProductCard;\r\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["_ref","_product$mainImage","_product$mainImage2","product","path","priceWithDiscount","Math","ceil","price","discount","isDiscountLable","styles","isDiscountPrice","simplePrice","_jsx","className","children","_jsxs","Link","to","media","srcSet","concat","mainImage","deskTab","type","mob","src","alt","name","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}