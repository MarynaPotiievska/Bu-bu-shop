{"version":3,"file":"static/js/71.e85880b3.chunk.js","mappings":"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","sources":["components/Auth/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styles from \"./Auth.module.css\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { register } from \"redux/auth/operations\";\r\n\r\nimport Error from \"components/Auth/ErrorMessage\";\r\n\r\nconst registerSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .min(3, \"Name must consist of at least 3 characters\")\r\n    .required(\"Name is required\"),\r\n  phone: yup\r\n    .string()\r\n    .matches(\r\n      /^[+]380?[-\\s]?([5|6|9][0|3|5|6|8|9])?[-.\\s]?[0-9]{7}$/,\r\n      \"Phone has incorrect form. Please, try again.\"\r\n    )\r\n    .required(\"Phone is required\"),\r\n  email: yup\r\n    .string()\r\n    .matches(\r\n      /^\\w+([.-_]?\\w+)*@\\w+([.-_]?\\w+)*(\\.\\w{2,3})$/,\r\n      \"Email has incorrect form. Please, try again.\"\r\n    )\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string()\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{6,12}$/,\r\n      \"Password must consist of 6-12 characters including at least 1 uppercase, 1 lowercase, 1 number and 1 symbol (!@#$%^&*_=+-)\"\r\n    )\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  name: \"\",\r\n  phone: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst RegisterForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    dispatch(register(values));\r\n    resetForm();\r\n  };\r\n\r\n  const isError = (errors, name) => {\r\n    return errors[name] ? `${styles[\"form-el-error\"]}` : null;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={styles.title}>Реєстрація</h1>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={registerSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ errors }) => {\r\n          return (\r\n            <Form autoComplete=\"off\" className={styles.form}>\r\n              <label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Ім’я\"\r\n                  className={`${styles[\"form-el\"]} ${isError(errors, \"name\")}`}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"name\"\r\n                  component={Error}\r\n                  message={errors.name}\r\n                />\r\n              </label>\r\n              <label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"phone\"\r\n                  placeholder=\"Телефон\"\r\n                  className={`${styles[\"form-el\"]} ${isError(errors, \"phone\")}`}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"phone\"\r\n                  component={Error}\r\n                  message={errors.phone}\r\n                />\r\n              </label>\r\n              <label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"E-mail\"\r\n                  className={`${styles[\"form-el\"]} ${isError(errors, \"email\")}`}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"email\"\r\n                  component={Error}\r\n                  message={errors.email}\r\n                />\r\n              </label>\r\n              <label>\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Пароль\"\r\n                  className={`${styles[\"form-el\"]} ${isError(\r\n                    errors,\r\n                    \"password\"\r\n                  )}`}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"login\"\r\n                  component={Error}\r\n                  message={errors.password}\r\n                />\r\n              </label>\r\n              <button\r\n                type=\"submit\"\r\n                className={`${styles[\"form-el\"]} ${styles[\"form-btn\"]}`}\r\n              >\r\n                Зареєструватись\r\n              </button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import AlterAuth from \"components/Auth/AlterAuth\";\r\nimport AuthLink from \"components/Auth/AuthLink\";\r\nimport Footer from \"components/Auth/Footer\";\r\nimport Header from \"components/Auth/Header\";\r\nimport LogoLink from \"components/Auth/LogoLink\";\r\nimport RegisterForm from \"components/Auth/RegisterForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <LogoLink />\r\n        <RegisterForm />\r\n        <AuthLink path=\"/signin\" message=\"У мене є акаунт\" />\r\n        <AlterAuth />\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n"],"names":["registerSchema","yup","shape","name","min","required","phone","matches","email","password","initialValues","dispatch","useDispatch","isError","errors","concat","styles","_jsxs","children","_jsx","className","Formik","validationSchema","onSubmit","values","_ref","resetForm","register","_ref2","Form","autoComplete","Field","type","placeholder","ErrorMessage","component","Error","message","_Fragment","Header","LogoLink","RegisterForm","AuthLink","path","AlterAuth","Footer"],"sourceRoot":""}