{"version":3,"file":"static/js/970.7d20d8c9.chunk.js","mappings":"8RAYMA,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,MAAOF,EAAAA,KAEJG,QACC,GAAAC,OAPc,2CAOA,GAAAA,OANA,wDAOd,yDAEDC,SAAS,8BACZC,SAAUN,EAAAA,KAEPG,QACC,iEACA,8HAEDE,SAAS,0BAGRE,EAAgB,CACpBL,MAAO,GACPI,SAAU,IAuEZ,EApEmB,WACjB,IAAAE,GAA4BC,EAAAA,EAAAA,UAASF,GAAcG,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAMF,EAAA,GAMPG,GANkBH,EAAA,GAMR,SAACI,EAAQC,GACvB,OAAOD,EAAOC,GAAK,GAAAX,OAAMY,EAAAA,EAAAA,kBAA4B,IACvD,GAEA,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWJ,EAAAA,EAAAA,MAAaE,SAAC,8BAC7BC,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLd,cAAeK,EACfU,iBAAkBvB,EAClBwB,SAde,SAACX,EAAMY,GAAaA,EAATC,UAC9BC,QAAQC,IAAIf,EACd,EAY6BM,SAEtB,SAAAU,GAAiB,IAAdd,EAAMc,EAANd,OACF,OACEG,EAAAA,EAAAA,MAACY,EAAAA,GAAI,CAACC,aAAa,MAAMV,UAAWJ,EAAAA,EAAAA,KAAYE,SAAA,EAC9CD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CACJC,KAAK,OACLjB,KAAK,QACLkB,YAAY,uEACZb,UAAS,GAAAhB,OAAKY,EAAAA,EAAAA,WAAiB,KAAAZ,OAAIS,EAAQC,EAAQ,aAErDK,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CACXnB,KAAK,QACLoB,UAAWC,EAAAA,EACXC,QAASvB,EAAOZ,YAGpBe,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CACJC,KAAK,WACLjB,KAAK,WACLkB,YAAY,uCACZb,UAAS,GAAAhB,OAAKY,EAAAA,EAAAA,WAAiB,KAAAZ,OAAIS,EACjCC,EACA,gBAGJK,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CACXnB,KAAK,QACLoB,UAAWC,EAAAA,EACXC,QAASvB,EAAOR,eAGpBa,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAACC,GAAG,UAAUnB,UAAWJ,EAAAA,EAAAA,mBAA0BE,SAAC,gFAGzDC,EAAAA,EAAAA,KAAA,UACEa,KAAK,SACLZ,UAAS,GAAAhB,OAAKY,EAAAA,EAAAA,WAAiB,KAAAZ,OAAIY,EAAAA,EAAAA,aAAqBE,SACzD,2CAKP,MAIR,EC9EA,EAfe,WACb,OACED,EAAAA,EAAAA,MAAAuB,EAAAA,SAAA,CAAAtB,SAAA,EACEC,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,KACPxB,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACuB,EAAAA,EAAQ,KACTvB,EAAAA,EAAAA,KAACwB,EAAU,KACXxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,CAACC,KAAK,YAAYR,QAAQ,+GACnClB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,QAEZ3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAM,MAGb,C","sources":["components/Auth/SigninForm.jsx","pages/Signin.jsx"],"sourcesContent":["import styles from \"./Auth.module.css\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport Error from \"components/Auth/ErrorMessage\";\r\n\r\nconst emailRegexp = \"/^[a-z0-9._%+-]+@[a-z0-9.-]+[a-z]{2,4}$\";\r\nconst phoneRegexp = \"^[+]380?[-s]?([5|6|9][0|3|5|6|8|9])?[-.s]?[0-9]{7}$/\";\r\n\r\nconst signinSchema = yup.object().shape({\r\n  login: yup\r\n    .string()\r\n    .matches(\r\n      `${emailRegexp}` | `${phoneRegexp}`,\r\n      \"Email or phone has incorrect form. Please, try again.\"\r\n    )\r\n    .required(\"Email or phone is required\"),\r\n  password: yup\r\n    .string()\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{6,12}$/,\r\n      \"Password must consist of 6-12 characters including at least 1 uppercase, 1 lowercase, 1 number and 1 symbol (!@#$%^&*_=+-)\"\r\n    )\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst initialValues = {\r\n  login: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst SigninForm = () => {\r\n  const [values, setValues] = useState(initialValues);\r\n\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    console.log(values);\r\n  };\r\n\r\n  const isError = (errors, name) => {\r\n    return errors[name] ? `${styles[\"form-el-error\"]}` : null;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={styles.title}>Вхід</h1>\r\n      <Formik\r\n        initialValues={values}\r\n        validationSchema={signinSchema}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ errors }) => {\r\n          return (\r\n            <Form autoComplete=\"off\" className={styles.form}>\r\n              <label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"login\"\r\n                  placeholder=\"Телефон або e-mail\"\r\n                  className={`${styles[\"form-el\"]} ${isError(errors, \"login\")}`}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"login\"\r\n                  component={Error}\r\n                  message={errors.login}\r\n                />\r\n              </label>\r\n              <label>\r\n                <Field\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"Пароль\"\r\n                  className={`${styles[\"form-el\"]} ${isError(\r\n                    errors,\r\n                    \"password\"\r\n                  )}`}\r\n                />\r\n                <ErrorMessage\r\n                  name=\"login\"\r\n                  component={Error}\r\n                  message={errors.password}\r\n                />\r\n              </label>\r\n              <Link to=\"/signin\" className={styles[\"link-reset-pass\"]}>\r\n                Забули пароль?\r\n              </Link>\r\n              <button\r\n                type=\"submit\"\r\n                className={`${styles[\"form-el\"]} ${styles[\"form-btn\"]}`}\r\n              >\r\n                Увійти\r\n              </button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SigninForm;\r\n","import AlterAuth from \"components/Auth/AlterAuth\";\r\nimport AuthLink from \"components/Auth/AuthLink\";\r\nimport Footer from \"components/Auth/Footer\";\r\nimport Header from \"components/Auth/Header\";\r\nimport LogoLink from \"components/Auth/LogoLink\";\r\nimport SigninForm from \"components/Auth/SigninForm\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <LogoLink />\r\n        <SigninForm />\r\n        <AuthLink path=\"/register\" message=\"У мене немає акаунта\" />\r\n        <AlterAuth />\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n"],"names":["signinSchema","yup","shape","login","matches","concat","required","password","initialValues","_useState","useState","_useState2","_slicedToArray","values","isError","errors","name","styles","_jsxs","children","_jsx","className","Formik","validationSchema","onSubmit","_ref","resetForm","console","log","_ref2","Form","autoComplete","Field","type","placeholder","ErrorMessage","component","Error","message","Link","to","_Fragment","Header","LogoLink","SigninForm","AuthLink","path","AlterAuth","Footer"],"sourceRoot":""}